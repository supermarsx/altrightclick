name: Rolling Release

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]

permissions:
  contents: write

jobs:
  build-x64:
    name: Build (x64)
    runs-on: windows-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Configure + Build (x64)
        run: |
          cmake -S . -B build/x64 -G "Visual Studio 17 2022" -A x64 \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_MSVC_DEBUG_INFORMATION_FORMAT=ProgramDatabase \
            -DCMAKE_CXX_FLAGS_RELEASE="/Zi" \
            -DCMAKE_EXE_LINKER_FLAGS_RELEASE="/DEBUG"
          cmake --build build/x64 --config Release -- /m

      - name: Package (x64)
        shell: pwsh
        run: |
          New-Item -Type Directory dist/x64 | Out-Null
          Copy-Item build/x64/Release/altrightclick.exe dist/x64/
          if (Test-Path build/x64/Release/altrightclick.pdb) { Copy-Item build/x64/Release/altrightclick.pdb dist/x64/ }
          Copy-Item config.example.ini dist/x64/ -ErrorAction SilentlyContinue
          Copy-Item readme.md dist/x64/ -ErrorAction SilentlyContinue
          Copy-Item license.md dist/x64/ -ErrorAction SilentlyContinue
          Compress-Archive -Path dist/x64/* -DestinationPath dist/altrightclick-windows-x64.zip -Force
          if (Test-Path dist/x64/altrightclick.pdb) { Compress-Archive -Path dist/x64/altrightclick.pdb -DestinationPath dist/altrightclick-windows-x64-pdb.zip -Force }

      - name: Upload artifact (x64)
        uses: actions/upload-artifact@v4
        with:
          name: altrightclick-windows-x64
          path: dist/altrightclick-windows-x64.zip

      - name: Upload artifact (x64 PDB)
        if: ${{ hashFiles('dist/altrightclick-windows-x64-pdb.zip') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: altrightclick-windows-x64-pdb
          path: dist/altrightclick-windows-x64-pdb.zip

  build-arm64:
    name: Build (ARM64)
    runs-on: windows-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Configure + Build (ARM64)
        run: |
          cmake -S . -B build/arm64 -G "Visual Studio 17 2022" -A ARM64 \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_MSVC_DEBUG_INFORMATION_FORMAT=ProgramDatabase \
            -DCMAKE_CXX_FLAGS_RELEASE="/Zi" \
            -DCMAKE_EXE_LINKER_FLAGS_RELEASE="/DEBUG"
          cmake --build build/arm64 --config Release -- /m

      - name: Package (ARM64)
        shell: pwsh
        run: |
          New-Item -Type Directory dist/arm64 | Out-Null
          Copy-Item build/arm64/Release/altrightclick.exe dist/arm64/
          if (Test-Path build/arm64/Release/altrightclick.pdb) { Copy-Item build/arm64/Release/altrightclick.pdb dist/arm64/ }
          Copy-Item config.example.ini dist/arm64/ -ErrorAction SilentlyContinue
          Copy-Item readme.md dist/arm64/ -ErrorAction SilentlyContinue
          Copy-Item license.md dist/arm64/ -ErrorAction SilentlyContinue
          Compress-Archive -Path dist/arm64/* -DestinationPath dist/altrightclick-windows-arm64.zip -Force
          if (Test-Path dist/arm64/altrightclick.pdb) { Compress-Archive -Path dist/arm64/altrightclick.pdb -DestinationPath dist/altrightclick-windows-arm64-pdb.zip -Force }

      - name: Upload artifact (ARM64)
        uses: actions/upload-artifact@v4
        with:
          name: altrightclick-windows-arm64
          path: dist/altrightclick-windows-arm64.zip

      - name: Upload artifact (ARM64 PDB)
        if: ${{ hashFiles('dist/altrightclick-windows-arm64-pdb.zip') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: altrightclick-windows-arm64-pdb
          path: dist/altrightclick-windows-arm64-pdb.zip

  publish:
    name: Publish Rolling Release
    runs-on: ubuntu-latest
    needs: [build-x64, build-arm64]
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          # download both artifacts to ./dist
          path: dist
          merge-multiple: true

      - name: List artifacts
        run: ls -la dist

      - name: Compute rolling tag
        id: meta
        run: |
          DATE=$(date -u +"%y.%m.%d")
          echo "tag=v0.1.${DATE}" >> "$GITHUB_OUTPUT"
          echo "name=v0.1.${DATE}" >> "$GITHUB_OUTPUT"
          # Extract semver from CMakeLists.txt (project(altrightclick VERSION X.Y.Z))
          SEMVER=$(sed -n 's/.*project( *altrightclick *VERSION *\([0-9]*\.[0-9]*\.[0-9]*\).*/\1/p' CMakeLists.txt)
          if [ -z "$SEMVER" ]; then SEMVER=0.0.0; fi
          echo "semver=$SEMVER" >> "$GITHUB_OUTPUT"
          echo "semvertag=v$SEMVER" >> "$GITHUB_OUTPUT"

      - name: Compute checksums
        run: |
          cd dist
          sha256sum altrightclick-windows-x64.zip > altrightclick-windows-x64.zip.sha256
          sha256sum altrightclick-windows-arm64.zip > altrightclick-windows-arm64.zip.sha256
          if [ -f altrightclick-windows-x64-pdb.zip ]; then sha256sum altrightclick-windows-x64-pdb.zip > altrightclick-windows-x64-pdb.zip.sha256; fi
          if [ -f altrightclick-windows-arm64-pdb.zip ]; then sha256sum altrightclick-windows-arm64-pdb.zip > altrightclick-windows-arm64-pdb.zip.sha256; fi

      - name: Update Scoop manifest in repo
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          VER_NO_V="${{ steps.meta.outputs.semver }}"
          X64_HASH=$(cut -d ' ' -f1 dist/altrightclick-windows-x64.zip.sha256)
          ARM64_HASH=$(cut -d ' ' -f1 dist/altrightclick-windows-arm64.zip.sha256)
          X64_URL="https://github.com/${{ github.repository }}/releases/download/${{ steps.meta.outputs.semvertag }}/altrightclick-windows-x64.zip"
          ARM64_URL="https://github.com/${{ github.repository }}/releases/download/${{ steps.meta.outputs.semvertag }}/altrightclick-windows-arm64.zip"
          jq \
            --arg ver "$VER_NO_V" \
            --arg x64 "$X64_URL" \
            --arg a64 "$ARM64_URL" \
            --arg xh "$X64_HASH" \
            --arg ah "$ARM64_HASH" \
            '.version=$ver | .architecture["64bit"].url=$x64 | .architecture["64bit"].hash=$xh | .architecture.arm64.url=$a64 | .architecture.arm64.hash=$ah' \
            scoop/altrightclick.json > scoop/altrightclick.json.tmp
          mv scoop/altrightclick.json.tmp scoop/altrightclick.json
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add scoop/altrightclick.json
          git commit -m "scoop: update manifest to version $VER_NO_V" || echo "No changes to scoop manifest"
          git push origin HEAD:${GITHUB_REF_NAME}

      - name: Publish
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.meta.outputs.tag }}
          name: ${{ steps.meta.outputs.name }}
          draft: false
          prerelease: false
          allowUpdates: true
          replacesArtifacts: true
          artifacts: |
            dist/altrightclick-windows-x64.zip,
            dist/altrightclick-windows-arm64.zip,
            dist/altrightclick-windows-x64.zip.sha256,
            dist/altrightclick-windows-arm64.zip.sha256,
            dist/altrightclick-windows-x64-pdb.zip,
            dist/altrightclick-windows-arm64-pdb.zip,
            dist/altrightclick-windows-x64-pdb.zip.sha256,
            dist/altrightclick-windows-arm64-pdb.zip.sha256
          generateReleaseNotes: false
          immutableCreate: false
          makeLatest: true
          omitBody: false
          omitBodyDuringUpdate: false
          omitDraftDuringUpdate: false
          omitName: false
          omitNameDuringUpdate: false
          omitPrereleaseDuringUpdate: false
          removeArtifacts: false
          skipIfReleaseExists: false
          token: ${{ secrets.GITHUB_TOKEN }}
          updateOnlyUnreleased: false

      - name: Publish (semver tag)
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.meta.outputs.semvertag }}
          name: v${{ steps.meta.outputs.semver }}
          draft: false
          prerelease: false
          allowUpdates: true
          replacesArtifacts: true
          artifacts: |
            dist/altrightclick-windows-x64.zip,
            dist/altrightclick-windows-arm64.zip,
            dist/altrightclick-windows-x64.zip.sha256,
            dist/altrightclick-windows-arm64.zip.sha256,
            dist/altrightclick-windows-x64-pdb.zip,
            dist/altrightclick-windows-arm64-pdb.zip,
            dist/altrightclick-windows-x64-pdb.zip.sha256,
            dist/altrightclick-windows-arm64-pdb.zip.sha256
          generateReleaseNotes: false
          immutableCreate: false
          makeLatest: false
          omitBody: false
          omitBodyDuringUpdate: false
          omitDraftDuringUpdate: false
          omitName: false
          omitNameDuringUpdate: false
          omitPrereleaseDuringUpdate: false
          removeArtifacts: false
          skipIfReleaseExists: false
          token: ${{ secrets.GITHUB_TOKEN }}
          updateOnlyUnreleased: false
